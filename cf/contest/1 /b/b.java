/* Generated by powerful Codeforces Tool
 * Author: PierreQi
 * Time: 2022-08-11 12:06:14
**/

import java.io.BufferedOutputStream;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.StringTokenizer;
import java.io.InputStreamReader;

public class b{

	public static void main(String[] args){
		FastScanner sc = new FastScanner();
        
        PrintWriter out = new PrintWriter(new BufferedOutputStream(System.out));        

		//-------------Your Code Here -----------------
        
		int n = sc.nextInt();
        for(int i = 0; i < n; i ++){
            String s = sc.next();            
            convert(s,out);
        }
        		
		//-------------Your Code Above-----------------
		out.close();
	} 


    //1: BC23 2:R23C55
    private static void convert(String str,PrintWriter out){
        int len = str.length();
        int indexC = str.lastIndexOf("C");
        int type = 1;
        while(indexC >= 0){
            char ch = str.charAt(indexC);
            if (ch >= '0' && ch <= '9'){
                type = 2;
            }
            indexC --;
        }
        
        if (type == 1){ //1-->2
            int row = 0;
            int col = 0;
            for(int i = 0;i < len;i++){
                char ch = str.charAt(i);
                if (Character.isAlphabetic(ch)){
                    row = row *26 + (ch - 'A' + 1);
                }else{
                    col = col *10 + (ch - '0');
                }
            }
            out.println("R" + col + "C" + row);
        }else{//2-->1
            int index = 1;            
            int row = 0;
            int col = 0;
            boolean isRow = true;
            while (index < len){
                char ch = str.charAt(index);
                if (ch == 'C') {
                    isRow = false;
                    index++;
                    continue;
                }

                if (isRow){
                    row = row *10 + (ch - '0');                
                }else{  
                    col = col *10 + (ch - '0');
                }
                index ++;
            }
            StringBuilder sb = new StringBuilder();
            
            while(col > 0){
                if (col % 26 == 0) {
                    sb.append('Z');
                    col --;
                }
                else{
                    sb.append((char)((col % 26) - 1 + 'A' ));
                }
                col = col / 26;                                
            }

            sb.reverse();
            out.println(sb.toString()+row);
        }        
    }

	public static class FastScanner {
        
		BufferedReader br;
        StringTokenizer st;

        public FastScanner() {
            br = new BufferedReader(new InputStreamReader(System.in));
        }

        String next() {
            while (st == null || !st.hasMoreElements()) {
                try {
                    st = new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }

        int nextInt() {
            return Integer.parseInt(next());
        }

        long nextLong() {
            return Long.parseLong(next());
        }

        double nextDouble() {
            return Double.parseDouble(next());
        }

        String nextLine(){
            String str = "";
            try {
                str = br.readLine();
            } catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }
    }
}
